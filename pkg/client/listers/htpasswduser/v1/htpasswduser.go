// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v12 "htpasswd-operator/pkg/apis/htpasswduser/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// HtpasswdUserLister helps list HtpasswdUsers.
// All objects returned here must be treated as read-only.
type HtpasswdUserLister interface {
	// List lists all HtpasswdUsers in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v12.HtpasswdUser, err error)
	// HtpasswdUsers returns an object that can list and get HtpasswdUsers.
	HtpasswdUsers(namespace string) HtpasswdUserNamespaceLister
	HtpasswdUserListerExpansion
}

// htpasswdUserLister implements the HtpasswdUserLister interface.
type htpasswdUserLister struct {
	indexer cache.Indexer
}

// NewHtpasswdUserLister returns a new HtpasswdUserLister.
func NewHtpasswdUserLister(indexer cache.Indexer) HtpasswdUserLister {
	return &htpasswdUserLister{indexer: indexer}
}

// List lists all HtpasswdUsers in the indexer.
func (s *htpasswdUserLister) List(selector labels.Selector) (ret []*v12.HtpasswdUser, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v12.HtpasswdUser))
	})
	return ret, err
}

// HtpasswdUsers returns an object that can list and get HtpasswdUsers.
func (s *htpasswdUserLister) HtpasswdUsers(namespace string) HtpasswdUserNamespaceLister {
	return htpasswdUserNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// HtpasswdUserNamespaceLister helps list and get HtpasswdUsers.
// All objects returned here must be treated as read-only.
type HtpasswdUserNamespaceLister interface {
	// List lists all HtpasswdUsers in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v12.HtpasswdUser, err error)
	// Get retrieves the HtpasswdUser from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v12.HtpasswdUser, error)
	HtpasswdUserNamespaceListerExpansion
}

// htpasswdUserNamespaceLister implements the HtpasswdUserNamespaceLister
// interface.
type htpasswdUserNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all HtpasswdUsers in the indexer for a given namespace.
func (s htpasswdUserNamespaceLister) List(selector labels.Selector) (ret []*v12.HtpasswdUser, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v12.HtpasswdUser))
	})
	return ret, err
}

// Get retrieves the HtpasswdUser from the indexer for a given namespace and name.
func (s htpasswdUserNamespaceLister) Get(name string) (*v12.HtpasswdUser, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v12.Resource("htpasswduser"), name)
	}
	return obj.(*v12.HtpasswdUser), nil
}
